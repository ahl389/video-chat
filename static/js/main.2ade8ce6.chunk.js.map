{"version":3,"sources":["logo.svg","Track.js","Participant.js","Room.js","App.js","reportWebVitals.js","index.js"],"names":["Track","props","ref","React","createRef","this","track","current","appendChild","attach","className","Component","Participant","state","tracks","addTrack","bind","existingTracks","Array","from","participant","values","map","publication","setState","on","id","identity","length","owner","Room","participants","existingParticipants","room","localParticipant","addParticipant","removeParticipant","disconnect","console","log","filter","p","App","inRoom","inputRef","joinRoom","leaveRoom","updateIdentity","focusTextInput","connect","require","event","target","value","placeholder","fetch","response","json","data","accessToken","name","audio","video","width","onClick","onChange","disabled","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2ade8ce6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","import React, {Component} from 'react';\nimport './App.css';\n\n\nclass Track extends Component {\n  constructor(props) {\n    super(props)\n    this.ref = React.createRef();\n  }\n\n  componentDidMount() {\n    if (this.props.track != null) {\n      this.ref.current.appendChild(this.props.track.attach())\n    }\n  }\n\n  // componentWillUnmount() {\n  //   this.props.track.detach()\n  // }\n\n  render() {\n    return (\n      <div className=\"track\" ref={this.ref}></div> \n    )\n  }\n}\n\nexport default Track;\n","import React, {Component} from 'react';\nimport './App.css';\nimport Track from './Track'\n\n\nclass Participant extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      tracks: []\n    }\n\n    this.addTrack = this.addTrack.bind(this);\n  }\n\n  componentDidMount() {\n    const existingPublications = Array.from(this.props.participant.tracks.values());\n    const existingTracks = existingPublications.map(publication => publication.track)\n    this.setState({tracks: existingTracks});\n\n    this.props.participant.on('trackSubscribed', track => this.addTrack(track));\n  }\n\n\n  addTrack(track) {\n    this.setState({\n      tracks: [...this.state.tracks, track]\n    })\n  }\n\n  render() {\n    return ( \n      <div className=\"participant\" id={this.props.participant.identity}>\n        <div className=\"identity\">{ this.props.participant.identity}</div>\n        { \n          this.state.tracks.length > 0 \n          ? this.state.tracks.map(track => <Track key={track} owner={this.props.participant.identity} track={track}/>)\n          : ''\n        }\n      </div>\n    );\n  }\n}\n\nexport default Participant;\n","import React, {Component} from 'react';\nimport './App.css';\nimport Participant from './Participant';\n\n\nclass Room extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      participants: []\n    }\n  }\n\n  componentDidMount() {\n    // Get existing participants and add everyone, including local participants, to participant state\n    const existingParticipants = Array.from(this.props.room.participants.values());\n    this.setState({participants: [...existingParticipants, this.props.room.localParticipant]});\n\n    // Add event listeneres for future participants coming or going\n    this.props.room.on('participantConnected', participant => this.addParticipant(participant));\n    this.props.room.on('participantDisconnected', participant => this.removeParticipant(participant));\n  }\n\n  componentWillUnmount() {\n    this.props.room.disconnect();\n  }\n\n  addParticipant(participant) {\n    console.log(`${participant.identity} has joined the room.`)\n\n    this.setState({\n      participants: [...this.state.participants, participant]\n    })\n  }\n\n  removeParticipant(participant) {\n    console.log(`${participant.identity} has left the room`)\n\n    this.setState({\n      participants: this.state.participants.filter(p => p.identity != participant.identity)\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"room\">\n        {\n          this.state.participants.length > 0\n          ? this.state.participants.map(participant => \n              <Participant key={participant.identity} participant={participant}/>\n            )\n          : ''\n        }\n      </div>\n    );\n  }\n\n}\n\nexport default Room;\n","import logo from './logo.svg';\nimport './App.css';\nimport React, {Component} from 'react';\nimport Room from './Room';\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      identity: '',\n      room: null,\n      inRoom: false\n    }\n\n    this.inputRef = React.createRef();\n\n    this.joinRoom = this.joinRoom.bind(this);\n    this.leaveRoom = this.leaveRoom.bind(this);\n    this.updateIdentity = this.updateIdentity.bind(this);\n    this.focusTextInput = this.focusTextInput.bind(this);\n  }\n\n  componentDidMount() {\n    const { connect } = require('twilio-video');\n    this.setState({connect: connect});\n  }\n\n  updateIdentity(event) {\n    this.setState({\n      identity: event.target.value\n    })\n  }\n\n  focusTextInput() {\n    this.inputRef.current.placeholder = ''\n  }\n  \n  async joinRoom() {\n    try {\n      const response = await fetch(`https://backend-9288-dev.twil.io/token?identity=${this.state.identity}`);\n      const data = await response.json();\n      const room = await this.state.connect(data.accessToken, {\n        name:'secret-santa4',\n        audio: true,\n        video: { width: 640 } \n      });\n\n      this.setState({ room: room, inRoom: true })\n    } catch(err) {\n      console.log(err)\n    }\n  }\n\n  leaveRoom() {\n    this.state.room.disconnect();\n    this.setState({room: null, inRoom: false})\n  }\n\n  render() {\n    return (\n      <div className=\"app\">\n        { \n          ! this.state.inRoom\n          ? <div className = \"inactive\">\n              <input ref={this.inputRef} value={this.state.identity} onClick={this.focusTextInput} onChange={this.updateIdentity} placeholder=\"What's your name?\"></input>\n              {\n                ! this.state.identity == ''\n                ? <button onClick={this.joinRoom}>Join Room</button>\n                : <button disabled onClick={this.joinRoom}>Join Room</button>\n              }\n            </div>\n          : <div className = \"active\">\n              <Room room={this.state.room} />\n              <button id=\"leaveRoom\" onClick={this.leaveRoom}>Leave Room</button>\n            </div>\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}